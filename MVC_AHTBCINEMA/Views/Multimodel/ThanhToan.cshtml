@using Microsoft.AspNetCore.Http
@model MVC_AHTBCINEMA.Model.Multimodel
@{
    ViewData["Title"] = "ThanhToan";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Lấy thông tin tài khoản đăng nhập từ Session
    string user = Context.Session.GetString("Username");
    bool isLoginIN = !string.IsNullOrEmpty(user);

    // Khởi tạo totalAmount
    float totalAmount = 0;

    // Tính tổng số tiền dựa trên các vé (Ve) trong model
    if (Model.Ve != null)
    {
        totalAmount = Model.Ve.Sum(ve => ve.GiaVe);
    }

    // Khởi tạo totalDiscount
    float totalDiscount = 0;

    // Tính tổng giảm giá dựa trên các khuyến mãi (KhuyenMai)
    if (Model.KhuyenMai != null)
    {
        totalDiscount = totalAmount * Model.KhuyenMai.Sum(km => km.Phantram) / 100;
    }

    // Áp dụng giảm giá vào totalAmount
    totalAmount -= totalDiscount;
}


<style>

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif
    }

    .container {
        margin: 30px auto;
    }

        .container .card {
            width: 100%;
            box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
            background: #fff;
            border-radius: 0px;
        }

    body {
        background: #eee
    }



    .btn.btn-primary {
        background-color: #ddd;
        color: black;
        box-shadow: none;
        border: none;
        font-size: 20px;
        width: 100%;
        height: 100%;
    }

        .btn.btn-primary:focus {
            box-shadow: none;
        }

    .container .card .img-box {
        width: 80px;
        height: 50px;
    }

    .container .card img {
        width: 100%;
        object-fit: fill;
    }

    .container .card .number {
        font-size: 24px;
    }

    .container .card-body .btn.btn-primary .fab.fa-cc-paypal {
        font-size: 32px;
        color: #3333f7;
    }

    .fab.fa-cc-amex {
        color: #1c6acf;
        font-size: 32px;
    }

    .fab.fa-cc-mastercard {
        font-size: 32px;
        color: red;
    }

    .fab.fa-cc-discover {
        font-size: 32px;
        color: orange;
    }

    .c-green {
        color: green;
    }

    .box {
        height: 2000px;
        width: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #ddd;
    }

    .btn.btn-primary.payment {
        background-color: #1c6acf;
        color: white;
        border-radius: 0px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 24px;
    }


    .form__div {
        height: 50px;
        position: relative;
        margin-bottom: 24px;
    }

    .form-control {
        width: 100%;
        height: 45px;
        font-size: 14px;
        border: 1px solid #DADCE0;
        border-radius: 0;
        outline: none;
        padding: 2px;
        background: none;
        z-index: 1;
        box-shadow: none;
    }

    .form__label {
        position: absolute;
        left: 16px;
        top: 10px;
        background-color: #fff;
        color: #80868B;
        font-size: 16px;
        transition: .3s;
        text-transform: uppercase;
    }

    .form-control:focus + .form__label {
        top: -8px;
        left: 12px;
        color: #1A73E8;
        font-size: 12px;
        font-weight: 500;
        z-index: 10;
    }

    .form-control:not(:placeholder-shown).form-control:not(:focus) + .form__label {
        top: -8px;
        left: 12px;
        font-size: 12px;
        font-weight: 500;
        z-index: 10;
    }

    .form-control:focus {
        border: 1.5px solid #1A73E8;
        box-shadow: none;
    }

    img {
        width: 400px;
        height: 300px;
    }

    .message {
        display: none;
        margin-top: 20px;
        padding: 10px;
        border: 1px solid #ccc;
    }

    .btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }
</style>
<body>
    <div class="container">
        <div class="row">
            <div class="col-lg-4 mb-lg-0 mb-3">
                <div class="card p-3">
                    <img src="/Image/qrthanhtoan.jpg" alt="">
                </div>
            </div>
            <div class="col-lg-4 mb-lg-0 mb-3">
                <div class="card p-3">
                    <img src="/Image/qrthanhtoan2.jpg" alt="">
                </div>
            </div>
            <div class="col-lg-4 mb-lg-0 mb-3">
                <div class="card p-3">
                    <img src="/Image/qrthanhtoan3.jpg" alt="">
                </div>
            </div>
            <div class="col-12 mt-4">
                <div class="card p-3">
                    <p class="mb-0 fw-bold h4">Phương thức thanh toán</p>
                </div>
            </div>
            <div class="col-12">
                <div class="card p-3">
                    <div class="card-body border p-0">
                        <p>

                        </p>
                        <div class="collapse show p-3 pt-0" id="collapseExample">
                            <div class="row">
                                <div class="col-lg-5 mb-lg-0 mb-3">
                                    <p class="h4 mb-0">Thông tin</p>
                                    @foreach (var Phims in Model.Phim)
                                    {
                                        <p class="mb-0">
                                            <span class="fw-bold">Tên phim:</span>
                                            <span class="c-green">@Phims.TenPhim </span>
                                        </p>
                                    }

                                     @foreach (var caChieu in Model.CaChieu)
                                    {
                                        <p class="mb-0">
                                            <span class="fw-bold">Ngày chiếu:</span>
                                            <span class="c-green">@caChieu.NgayChieu.Date.ToShortDateString()</span>
                                        </p>
                                    }
                                    @foreach (var gioChieu in Model.GioChieu)
                                    {
                                        <p class="mb-0">
                                            <span class="fw-bold">Giờ chiếu:</span>
                                            <span class="c-green">@gioChieu.GioBatDau - @gioChieu.GioKetThuc</span>
                                        </p>
                                    }
                                     @foreach (var ve in Model.Ve)
                                    {
                                        <p class="mb-0">
                                            <span class="fw-bold">Giá:</span>
                                            <span class="c-green">@ve.GiaVe.ToString("N0") VNĐ</span>
                                        </p>
                                    }
                                    @foreach (var km in Model.KhuyenMai)
                                    {
                                        <p class="mb-0">
                                            <span class="fw-bold">Khuyến Mãi:</span>
                                            <span class="c-green">@km.KhuyenMaiName giảm @km.Phantram %</span>
                                        </p>
                                    }
                                    <p class="mb-0">
                                        <span class="fw-bold">Tổng tiền:</span>
                                        <span class="c-green">@totalAmount.ToString("N0") VNĐ</span>
                                    </p>
                                    @if (TempData["ApproveMessage"] != null)
                                    {
                                        <div class="alert alert-success">
                                            @TempData["ApproveMessage"]
                                        </div>
                                    }
                                </div>
                                <div class="col-lg-7">
                                    <div class="col-lg-5 mb-lg-0 mb-3">
                                        <form id="paymentForm" action="@Url.Action("CreateInvoice", "Multimodel")" method="post">
                                            <!-- Hiển thị chi tiết phim và thông tin thanh toán -->
                                            <!-- Các trường ẩn để truyền thông tin cần thiết -->
                                            <input type="hidden" name="id" value="@Model.Ghe.FirstOrDefault()?.IdGhe" />
                                            <input type="hidden" name="idphim" value="@Model.Phim.FirstOrDefault()?.IdPhim" />
                                            <input type="hidden" name="gioChieuId" value="@Model.GioChieu.FirstOrDefault()?.IdGioChieu" />
                                            <input type="hidden" name="username" value="@user" />

                                            <div class="btn btn-primary w-100" id="payBtn">Tạo mã giao dịch</div>
                                        </form>
                                        <div id="message" class="message"></div>
                                        <p id="transactionCode" class="mb-0" style="font-size: 16px; font-weight: bold; display: none;">
                                            Mã giao dịch của bạn: <span id="transactionId"></span>
                                        </p>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</body>
<script>
    var transactionCreated = sessionStorage.getItem('transactionCreated') === 'true'; // Kiểm tra xem giao dịch đã được tạo hay chưa

    // Hàm được gọi khi trang đã được load hoàn toàn
    document.addEventListener('DOMContentLoaded', function () {
        // Kiểm tra xem đã có giao dịch được tạo trước đó hay chưa
        if (transactionCreated) {
            // Lấy mã giao dịch từ sessionStorage và hiển thị lên giao diện
            var savedTransactionId = sessionStorage.getItem('transactionId');
            var transactionIdSpan = document.getElementById('transactionId');
            transactionIdSpan.innerText = savedTransactionId;

            var transactionCode = document.getElementById('transactionCode');
            transactionCode.style.display = 'block';
        }
    });

    document.getElementById('payBtn').addEventListener('click', function () {
        if (transactionCreated) {
            alert('Mã giao dịch đã được tạo. Vui lòng kiểm tra lại.');
            return;
        }

        var messageDiv = document.getElementById('message');
        messageDiv.style.display = 'block';
        messageDiv.innerHTML = 'Đang tạo mã giao dịch...';

        var transactionId = 'GD' + Math.floor(Math.random() * 1000000);
        transactionCreated = true;

        sessionStorage.setItem('transactionCreated', 'true'); // Đánh dấu đã tạo giao dịch
        sessionStorage.setItem('transactionId', transactionId); // Lưu mã giao dịch vào sessionStorage

        document.getElementById('payBtn').disabled = true;
        document.getElementById('payBtn').innerText = 'Đang xử lý...';

        // Giả lập gửi biểu mẫu sau một độ trễ
        setTimeout(function () {
            messageDiv.innerHTML = 'Tạo mã giao dịch thành công.';
            messageDiv.innerHTML += ' Mã giao dịch của bạn là: ' + transactionId;

            // Hiển thị mã giao dịch lên giao diện
            var transactionIdSpan = document.getElementById('transactionId');
            transactionIdSpan.innerText = transactionId;

            var transactionCode = document.getElementById('transactionCode');
            transactionCode.style.display = 'block';

            // Tạo và gửi biểu mẫu
            var form = document.createElement('form');
            form.setAttribute('method', 'post');
            form.setAttribute('action', '@Url.Action("CreateInvoice", "Multimodel")');

            var hiddenFieldId = document.createElement('input');
            hiddenFieldId.setAttribute('type', 'hidden');
            hiddenFieldId.setAttribute('name', 'id');
            hiddenFieldId.setAttribute('value', '@Model.Ghe.FirstOrDefault()?.IdGhe');

            var hiddenFieldIdPhim = document.createElement('input');
            hiddenFieldIdPhim.setAttribute('type', 'hidden');
            hiddenFieldIdPhim.setAttribute('name', 'idphim');
            hiddenFieldIdPhim.setAttribute('value', '@Model.Phim.FirstOrDefault()?.IdPhim');

            var hiddenFieldGioChieuId = document.createElement('input');
            hiddenFieldGioChieuId.setAttribute('type', 'hidden');
            hiddenFieldGioChieuId.setAttribute('name', 'gioChieuId');
            hiddenFieldGioChieuId.setAttribute('value', '@Model.GioChieu.FirstOrDefault()?.IdGioChieu');

            var hiddenFieldUsername = document.createElement('input');
            hiddenFieldUsername.setAttribute('type', 'hidden');
            hiddenFieldUsername.setAttribute('name', 'username');
            hiddenFieldUsername.setAttribute('value', '@user');

            form.appendChild(hiddenFieldId);
            form.appendChild(hiddenFieldIdPhim);
            form.appendChild(hiddenFieldGioChieuId);
            form.appendChild(hiddenFieldUsername);

            document.body.appendChild(form);
            form.submit();
        }, 2000); // Điều chỉnh thời gian chờ theo nhu cầu
    });


</script>
